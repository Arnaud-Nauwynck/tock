{
    "docs": [
        {
            "location": "/", 
            "text": "Bienvenue dans la documentation de Tock!\n\n\nPr\u00e9sentation\n\n\nTock\n (\nThe Open Conversation Kit\n) est une boite \u00e0 outils permettant de construire des agents conversationnels (ou bots). \n\n\nContrairement \u00e0 la plupart des autres solutions, il ne d\u00e9pend pas d\u2019API tierces (mais peut en int\u00e9grer ais\u00e9ment si n\u00e9cessaire)\u00a0: il est donc possible de conserver le contr\u00f4le complet de ses donn\u00e9es et de ses algorithmes.\n\n\nLe code source de l'ensemble se trouve sur github : \nhttps://github.com/voyages-sncf-technologies/tock\n sous la \nlicence Apache 2\n. \n\n\nDeux composants majeurs sont disponibles, le moteur NLP ( pour Natural Language Processing ou \nTALN\n en fran\u00e7ais),\n et un framework conversationnel qui int\u00e8gre les services NLP et diff\u00e9rents connecteurs comme Messenger, Google Assistant ou Slack. \n\n\nLa composante NLP est ind\u00e9pendante de la partie conversationnelle. \nIl est donc possible d'utiliser le NLP sans devoir ma\u00eetriser la complexit\u00e9 induite par la gestion des conversations.\nDans certain cas d'usage importants, comme l'\nInternet des objets\n, \nl'utilisation d'un mod\u00e8le NLP seule est pertinente.\n\n\n\n\nUne plateforme pour construire des mod\u00e8les d'analyse du language naturel\n\n\nInterface d'administration\n\n\nL'outil principal est constitu\u00e9 par une interface d'administration qui permet de qualifier des \nphrases afin de construire des mod\u00e8les de traitement automatique du langage naturel ( \nTALN\n ) :\n\n\n\n\nSuivi de qualit\u00e9 des mod\u00e8les\n\n\nCette interface fournit \u00e9galement les outils pour faire \u00e9voluer les mod\u00e8les et permet de monitorer leurs pertinences :\n\n\n\n\nStanford CoreNLP\n ou \nApache OpenNLP\n\n\nLa construction automatique des mod\u00e8les est bas\u00e9e sur une de ces solutions open-sources (au choix). \nTock fournit un niveau d'indirection qui permet d'int\u00e9grer d'autres librairies NLP. \nL'int\u00e9gration de \nSparkNLP\n est d'ailleurs en cours d'\u00e9tude.\n\n\nDuckling\n\n\nUn outil de parsing de dates et de types simples bas\u00e9 sur la librairie open-source \nDuckling\n \nest \u00e9galement int\u00e9gr\u00e9 par d\u00e9faut.\n\n\nAPI NLP\n\n\nLes mod\u00e8les peuvent \u00eatre utilis\u00e9s via l'\nAPI\n mis \u00e0 disposition.\n\n\nUn framework conversationnel\n\n\nCe framework est la deuxi\u00e8me brique qui permet de construire des assistants.\n\n\nElle utilise la brique de TALN de Tock via son \nAPI\n.\n\n\nGestion du contexte et de l'historique\n\n\nLa gestion des contextes des dialogues et de l\u2019historique des conversations est automatiquement disponible. \nDes notions avanc\u00e9es comme la fusion d'entit\u00e9s sont \u00e9galement mis \u00e0 disposition.\n(par exemple le fait de pr\u00e9ciser la date \"demain\" puis plus tard \"plut\u00f4t le soir\" met automatiquement la valeur de la date \u00e0 jour)\n\n\nConnecteurs tiers\n\n\nDes connecteurs \u00e0 Facebook Messenger, Google Assistant et Slack sont disponibles. \nIl est possible d'en cr\u00e9er facilement d'autres, que ce soit pour se connecter \u00e0 d'autres canaux ou pour r\u00e9pondre \u00e0 des besoins sp\u00e9cifiques.\n\n\nSuivi des conversations\n\n\nEnfin une interface d'administration est mise \u00e0 disposition et permet de tester les bots et de suivre les conversations des utilisateurs. \n\n\nGen\u00e8se du projet\n\n\nLe projet a \u00e9t\u00e9 initi\u00e9 en 2016 par l'\u00e9quipe Innovation de \nOui.sncf\n \ndans un premier temps afin de motoriser l'analyse des commandes vocales sur ses \napplications mobiles\n.\n\n\nL'outil a ensuite \u00e9t\u00e9 utilis\u00e9 pour impl\u00e9menter son \nBot Messenger\n.\n\n\nDepuis, une \n\u00e9quipe d\u00e9di\u00e9e\n au sein de OUI.sncf fait \u00e9voluer et maintient la solution.\n\n\nL'\nassistant Google OUI.sncf\n est \u00e9galement bas\u00e9 sur Tock,\nde m\u00eame que le \nOUIbot\n.\n\n\nLes outils ont \u00e9t\u00e9 open-sourc\u00e9s dans le but de mutualiser l'effort avec d'autres \u00e9quipes\n qui souhaiterait d\u00e9velopper des assistants ou bots. \n\n\nTechnologies\n\n\nLa plateforme applicative se base sur la \nJVM\n.\n\n\nLe langage de r\u00e9f\u00e9rence est \nKotlin\n.\n\n\nLe reste de la panoplie applicative est constitu\u00e9e de \nVert.x\n et \nMongoDB\n, m\u00eame si pour l\u2019instant les applications sont essentiellement d\u00e9velopp\u00e9s en \u00ab blocking IO \u00bb. En cible, l\u2019approche \u00ab\u00a0fibers\u00a0\u00bb ( cf \nhttp://docs.paralleluniverse.co/quasar/\n) sera privil\u00e9gi\u00e9e.\n\n\nLes interfaces d'administration sont impl\u00e9ment\u00e9es en \nAngular4\n/\nTypescript\n.\n\n\nCependant il est tout \u00e0 fait possible de d\u00e9velopper des applications en utilisant d'autres languages de programmation via les APIs mis \u00e0 disposition.\n\n\nLes diff\u00e9rents projets open-sourc\u00e9s\n\n\n\n\n\n\nLe projet principal se trouve sous licence \nApache OpenNLP\n. Le code source est disponible sur GitHub : \nhttps://github.com/voyages-sncf-technologies/tock\n\n\n\n\n\n\nCependant une d\u00e9pendance optionnelle,  \nStanford CoreNLP\n, est sous licence \nGPL\n. \n Le code utilisant cette d\u00e9pendance se trouve donc dans un projet \u00e0 part, sous licence GPL : \nhttps://github.com/voyages-sncf-technologies/tock-corenlp\n\n\n\n\n\n\nEnfin deux autres projets sont mis \u00e0 disposition : \n\n\n\n\nUn projet contenant des images dockers avec comme objectif de faciliter la prise en main : \nhttps://github.com/voyages-sncf-technologies/tock-docker\n\n\nUn projet contenant un exemple d'impl\u00e9mentation de bot se basant sur les \nAPI SNCF\n en Open Data : \nhttps://github.com/voyages-sncf-technologies/tock-bot-open-data", 
            "title": "Pr\u00e9sentation"
        }, 
        {
            "location": "/#bienvenue-dans-la-documentation-de-tock", 
            "text": "", 
            "title": "Bienvenue dans la documentation de Tock!"
        }, 
        {
            "location": "/#presentation", 
            "text": "Tock  ( The Open Conversation Kit ) est une boite \u00e0 outils permettant de construire des agents conversationnels (ou bots).   Contrairement \u00e0 la plupart des autres solutions, il ne d\u00e9pend pas d\u2019API tierces (mais peut en int\u00e9grer ais\u00e9ment si n\u00e9cessaire)\u00a0: il est donc possible de conserver le contr\u00f4le complet de ses donn\u00e9es et de ses algorithmes.  Le code source de l'ensemble se trouve sur github :  https://github.com/voyages-sncf-technologies/tock  sous la  licence Apache 2 .   Deux composants majeurs sont disponibles, le moteur NLP ( pour Natural Language Processing ou  TALN  en fran\u00e7ais),\n et un framework conversationnel qui int\u00e8gre les services NLP et diff\u00e9rents connecteurs comme Messenger, Google Assistant ou Slack.   La composante NLP est ind\u00e9pendante de la partie conversationnelle. \nIl est donc possible d'utiliser le NLP sans devoir ma\u00eetriser la complexit\u00e9 induite par la gestion des conversations.\nDans certain cas d'usage importants, comme l' Internet des objets , \nl'utilisation d'un mod\u00e8le NLP seule est pertinente.", 
            "title": "Pr\u00e9sentation"
        }, 
        {
            "location": "/#une-plateforme-pour-construire-des-modeles-danalyse-du-language-naturel", 
            "text": "", 
            "title": "Une plateforme pour construire des mod\u00e8les d'analyse du language naturel"
        }, 
        {
            "location": "/#interface-dadministration", 
            "text": "L'outil principal est constitu\u00e9 par une interface d'administration qui permet de qualifier des \nphrases afin de construire des mod\u00e8les de traitement automatique du langage naturel (  TALN  ) :", 
            "title": "Interface d'administration"
        }, 
        {
            "location": "/#suivi-de-qualite-des-modeles", 
            "text": "Cette interface fournit \u00e9galement les outils pour faire \u00e9voluer les mod\u00e8les et permet de monitorer leurs pertinences :", 
            "title": "Suivi de qualit\u00e9 des mod\u00e8les"
        }, 
        {
            "location": "/#stanford-corenlp-ou-apache-opennlp", 
            "text": "La construction automatique des mod\u00e8les est bas\u00e9e sur une de ces solutions open-sources (au choix). \nTock fournit un niveau d'indirection qui permet d'int\u00e9grer d'autres librairies NLP. \nL'int\u00e9gration de  SparkNLP  est d'ailleurs en cours d'\u00e9tude.", 
            "title": "Stanford CoreNLP ou Apache OpenNLP"
        }, 
        {
            "location": "/#duckling", 
            "text": "Un outil de parsing de dates et de types simples bas\u00e9 sur la librairie open-source  Duckling  \nest \u00e9galement int\u00e9gr\u00e9 par d\u00e9faut.", 
            "title": "Duckling"
        }, 
        {
            "location": "/#api-nlp", 
            "text": "Les mod\u00e8les peuvent \u00eatre utilis\u00e9s via l' API  mis \u00e0 disposition.", 
            "title": "API NLP"
        }, 
        {
            "location": "/#un-framework-conversationnel", 
            "text": "Ce framework est la deuxi\u00e8me brique qui permet de construire des assistants.  Elle utilise la brique de TALN de Tock via son  API .", 
            "title": "Un framework conversationnel"
        }, 
        {
            "location": "/#gestion-du-contexte-et-de-lhistorique", 
            "text": "La gestion des contextes des dialogues et de l\u2019historique des conversations est automatiquement disponible. \nDes notions avanc\u00e9es comme la fusion d'entit\u00e9s sont \u00e9galement mis \u00e0 disposition.\n(par exemple le fait de pr\u00e9ciser la date \"demain\" puis plus tard \"plut\u00f4t le soir\" met automatiquement la valeur de la date \u00e0 jour)", 
            "title": "Gestion du contexte et de l'historique"
        }, 
        {
            "location": "/#connecteurs-tiers", 
            "text": "Des connecteurs \u00e0 Facebook Messenger, Google Assistant et Slack sont disponibles. \nIl est possible d'en cr\u00e9er facilement d'autres, que ce soit pour se connecter \u00e0 d'autres canaux ou pour r\u00e9pondre \u00e0 des besoins sp\u00e9cifiques.", 
            "title": "Connecteurs tiers"
        }, 
        {
            "location": "/#suivi-des-conversations", 
            "text": "Enfin une interface d'administration est mise \u00e0 disposition et permet de tester les bots et de suivre les conversations des utilisateurs.", 
            "title": "Suivi des conversations"
        }, 
        {
            "location": "/#genese-du-projet", 
            "text": "Le projet a \u00e9t\u00e9 initi\u00e9 en 2016 par l'\u00e9quipe Innovation de  Oui.sncf  \ndans un premier temps afin de motoriser l'analyse des commandes vocales sur ses  applications mobiles .  L'outil a ensuite \u00e9t\u00e9 utilis\u00e9 pour impl\u00e9menter son  Bot Messenger .  Depuis, une  \u00e9quipe d\u00e9di\u00e9e  au sein de OUI.sncf fait \u00e9voluer et maintient la solution.  L' assistant Google OUI.sncf  est \u00e9galement bas\u00e9 sur Tock,\nde m\u00eame que le  OUIbot .  Les outils ont \u00e9t\u00e9 open-sourc\u00e9s dans le but de mutualiser l'effort avec d'autres \u00e9quipes\n qui souhaiterait d\u00e9velopper des assistants ou bots.", 
            "title": "Gen\u00e8se du projet"
        }, 
        {
            "location": "/#technologies", 
            "text": "La plateforme applicative se base sur la  JVM .  Le langage de r\u00e9f\u00e9rence est  Kotlin .  Le reste de la panoplie applicative est constitu\u00e9e de  Vert.x  et  MongoDB , m\u00eame si pour l\u2019instant les applications sont essentiellement d\u00e9velopp\u00e9s en \u00ab blocking IO \u00bb. En cible, l\u2019approche \u00ab\u00a0fibers\u00a0\u00bb ( cf  http://docs.paralleluniverse.co/quasar/ ) sera privil\u00e9gi\u00e9e.  Les interfaces d'administration sont impl\u00e9ment\u00e9es en  Angular4 / Typescript .  Cependant il est tout \u00e0 fait possible de d\u00e9velopper des applications en utilisant d'autres languages de programmation via les APIs mis \u00e0 disposition.", 
            "title": "Technologies"
        }, 
        {
            "location": "/#les-differents-projets-open-sources", 
            "text": "Le projet principal se trouve sous licence  Apache OpenNLP . Le code source est disponible sur GitHub :  https://github.com/voyages-sncf-technologies/tock    Cependant une d\u00e9pendance optionnelle,   Stanford CoreNLP , est sous licence  GPL . \n Le code utilisant cette d\u00e9pendance se trouve donc dans un projet \u00e0 part, sous licence GPL :  https://github.com/voyages-sncf-technologies/tock-corenlp    Enfin deux autres projets sont mis \u00e0 disposition :    Un projet contenant des images dockers avec comme objectif de faciliter la prise en main :  https://github.com/voyages-sncf-technologies/tock-docker  Un projet contenant un exemple d'impl\u00e9mentation de bot se basant sur les  API SNCF  en Open Data :  https://github.com/voyages-sncf-technologies/tock-bot-open-data", 
            "title": "Les diff\u00e9rents projets open-sourc\u00e9s"
        }, 
        {
            "location": "/pour-commencer/", 
            "text": "Commencer \u00e0 utiliser Tock\n\n\nUn exemple de bot\n\n\nUn bot d'exemple utilisant Tock est mis \u00e0 disposition\u00a0sur github : \nhttps://github.com/voyages-sncf-technologies/tock-bot-open-data\n.\n\n\nIl se base sur les \nAPI Open Data de la SNCF\n, et pr\u00e9sente des fonctionnalit\u00e9s minimales permettant de d\u00e9montrer l\u2019usage de Tock. \n\n\nIl s'agit d'un bon point de d\u00e9part, puisque il comporte \u00e9galement un mod\u00e8le NLP tr\u00e8s simple.\nBien entendu, comme le mod\u00e8le n'est pas complet, la qualit\u00e9 du bot est faible, mais suffit cependant \u00e0 d\u00e9montrer le principe de l'outil.\n\n\nDans la suite de la documentation, nous nous r\u00e9f\u00e9rerons \u00e0 cet exemple pour couvrir l'ensemble des fonctionnalit\u00e9s. \n\n\nImages Docker\n\n\nDes images docker sont mises \u00e0 disposition pour faciliter le d\u00e9marrage.\n\n\nCes images sont disponibles dans le \nHub Docker\n.\n\n\nLe code source utilis\u00e9 pour construire ces images, ainsi que les fichiers \ndocker-compose\n \nutilis\u00e9s pour d\u00e9marrer l'ensemble de la boite \u00e0 outils \nTock\n sont disponibles dans le repository github \nhttps://github.com/voyages-sncf-technologies/tock-docker\n.\n\n\nD\u00e9marrer l'interface d'administration\n\n\n    \n#get the last docker-compose file\n\n    curl -o docker-compose.yml https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/docker-compose.yml\n    \n#get the last tag\n\n    curl -o .env https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/.env\n    \n#launch the stack\n\n    docker-compose up\n\n\n\n\n\nL'interface d'administration NLP est maintenant disponible sur le port 80 : \nhttp://localhost\n\n\nl'identifiant par d\u00e9faut est \nadmin@app.com\n et le mot de passe \npassword\n.\n\n\nBot d'exemple bas\u00e9 sur les API Open Data\n\n\nUne image docker est mis \u00e0 disposition pour le lancer directement.\nLes instructions pour la d\u00e9marrer sont pr\u00e9cis\u00e9es dans le \nprojet github contenant les images docker\n.\n\n\nMenu de l'interface d'administration\n\n\nLe menu \u00e0 gauche permet d'acc\u00e9der aux diff\u00e9rentes fonctionnalit\u00e9s.\n\n\nle menu \nConfiguration\n permet de cr\u00e9er de nouveaux mod\u00e8le et de param\u00e9trer les options importantes.\n\n\nLes menus \nNLP\n et \nNLP QA\n sont d\u00e9di\u00e9s \u00e0 la construction de mod\u00e8les.\n\n\nLes menus \nBuild\n, \nTest\n et \nMonitoring\n sont eux utilis\u00e9s dans le cadre de la construction de bots ou d'assistants.", 
            "title": "Pour commencer"
        }, 
        {
            "location": "/pour-commencer/#commencer-a-utiliser-tock", 
            "text": "", 
            "title": "Commencer \u00e0 utiliser Tock"
        }, 
        {
            "location": "/pour-commencer/#un-exemple-de-bot", 
            "text": "Un bot d'exemple utilisant Tock est mis \u00e0 disposition\u00a0sur github :  https://github.com/voyages-sncf-technologies/tock-bot-open-data .  Il se base sur les  API Open Data de la SNCF , et pr\u00e9sente des fonctionnalit\u00e9s minimales permettant de d\u00e9montrer l\u2019usage de Tock.   Il s'agit d'un bon point de d\u00e9part, puisque il comporte \u00e9galement un mod\u00e8le NLP tr\u00e8s simple.\nBien entendu, comme le mod\u00e8le n'est pas complet, la qualit\u00e9 du bot est faible, mais suffit cependant \u00e0 d\u00e9montrer le principe de l'outil.  Dans la suite de la documentation, nous nous r\u00e9f\u00e9rerons \u00e0 cet exemple pour couvrir l'ensemble des fonctionnalit\u00e9s.", 
            "title": "Un exemple de bot"
        }, 
        {
            "location": "/pour-commencer/#images-docker", 
            "text": "Des images docker sont mises \u00e0 disposition pour faciliter le d\u00e9marrage.  Ces images sont disponibles dans le  Hub Docker .  Le code source utilis\u00e9 pour construire ces images, ainsi que les fichiers  docker-compose  \nutilis\u00e9s pour d\u00e9marrer l'ensemble de la boite \u00e0 outils  Tock  sont disponibles dans le repository github  https://github.com/voyages-sncf-technologies/tock-docker .", 
            "title": "Images Docker"
        }, 
        {
            "location": "/pour-commencer/#demarrer-linterface-dadministration", 
            "text": "#get the last docker-compose file \n    curl -o docker-compose.yml https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/docker-compose.yml\n     #get the last tag \n    curl -o .env https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/.env\n     #launch the stack \n    docker-compose up  L'interface d'administration NLP est maintenant disponible sur le port 80 :  http://localhost  l'identifiant par d\u00e9faut est  admin@app.com  et le mot de passe  password .", 
            "title": "D\u00e9marrer l'interface d'administration"
        }, 
        {
            "location": "/pour-commencer/#bot-dexemple-base-sur-les-api-open-data", 
            "text": "Une image docker est mis \u00e0 disposition pour le lancer directement.\nLes instructions pour la d\u00e9marrer sont pr\u00e9cis\u00e9es dans le  projet github contenant les images docker .", 
            "title": "Bot d'exemple bas\u00e9 sur les API Open Data"
        }, 
        {
            "location": "/pour-commencer/#menu-de-linterface-dadministration", 
            "text": "Le menu \u00e0 gauche permet d'acc\u00e9der aux diff\u00e9rentes fonctionnalit\u00e9s.  le menu  Configuration  permet de cr\u00e9er de nouveaux mod\u00e8le et de param\u00e9trer les options importantes.  Les menus  NLP  et  NLP QA  sont d\u00e9di\u00e9s \u00e0 la construction de mod\u00e8les.  Les menus  Build ,  Test  et  Monitoring  sont eux utilis\u00e9s dans le cadre de la construction de bots ou d'assistants.", 
            "title": "Menu de l'interface d'administration"
        }, 
        {
            "location": "/construire-le-modele/", 
            "text": "Mise en place d'un mod\u00e8le NLP\n\n\nVue d'ensemble\n\n\nSept onglets sont disponibles :\n\n\n\n\nTry it\n : permet d'ajouter ou de tester l'analyse de nouvelles phrases\n\n\nInbox\n : l'ensemble des phrases non encore qualifi\u00e9es\n\n\nArchive\n : l'ensembles des phrases archiv\u00e9es, c'est \u00e0 dire volontairement non encore reconnue par le mod\u00e8le\n\n\nSearch\n : une interface de recherche avanc\u00e9e qui permet de rechercher les phrases enregistr\u00e9es, qu'elles soient ou non qualifi\u00e9es  \n\n\nIntents\n : la liste des intentions du mod\u00e8le\n\n\nEntities\n : la liste des entit\u00e9s du mod\u00e8le\n\n\nLogs\n : La liste des requ\u00eates interrogeant le mod\u00e8le \n\n\n\n\nL'utilisateur est redirig\u00e9 par d\u00e9faut sur la cat\u00e9gorie \nInbox\n.\n\n\n\n\nAjouter et qualifier des phrases\n\n\nPour ajouter une phrase\n\n\nCliquez sur le menu \nTry It\n puis indiquez votre phrase.\nIl faut lui attribuer une intention en s\u00e9lectionnant \"Create a New Intent\" dans le liste de s\u00e9lection \"Intent\".\n\n\n\n\nSp\u00e9cifier des entit\u00e9s\n\n\nSi n\u00e9cessaire, vous pouvez ensuite sp\u00e9cifier les entit\u00e9s que vous souhaitez que votre mod\u00e8le reconnaisse pour cette intention,\nen s\u00e9lectionnant les portions de phrases correspondantes \u00e0 ces entit\u00e9s, puis en cliquant sur le bouton \"Add New Entity\" qui vient d'appara\u00eetre\n\n\n\n\nA vous de choisir ensuite un type d'entit\u00e9 existant, ou d'en cr\u00e9er un nouveau, puis de donner un role \u00e0 cette entit\u00e9.\n\n\n\n\nType d'entit\u00e9s pr\u00e9d\u00e9finies\n\n\nDans cette fen\u00eatre de cr\u00e9ation d'entit\u00e9s, vous pouvez constater qu'il existe d\u00e9j\u00e0 un certain nombre d'entit\u00e9s (pr\u00e9fix\u00e9es par \nduckling:\n).\nIl s'agit d'entit\u00e9s reconnues par la librairie \u00e9ponyme. Elle seront automatiquement reconnues et valoris\u00e9es pour cette intention si vous les\nsp\u00e9cifiez dans au moins une phrase de cette intention.\n\n\nSp\u00e9cifier plusieurs entit\u00e9s\n\n\nIl est bien s\u00fbr possible d'avoir plusieurs occurrences du m\u00eame role, ou d'un r\u00f4le diff\u00e9rent dans la m\u00eame phrase.\n\n\n\n\nValider la phrase\n\n\nTerminez la qualification de la phrase en cliquant sur le bouton \"Validate\". \nAu bout de 2 phrases qualifi\u00e9es pour une intention donn\u00e9e, il est possible que le 3\u00e8me phrase ajout\u00e9e soit imm\u00e9diatement\nreconnue.\n\n\n\n\nSi elle est qualifi\u00e9e correctement, vous n'avez plus qu'\u00e0 cliquer sur \"Validate\" pour confirmer que la phrase est correcte.\nSi ce n'est pas le cas, \u00e0 vous d'en corriger le sens avant de la valider.\n\n\nVous \u00eates en train de construire votre premier mod\u00e8le !\n\n\nRecherche de phrases\n\n\nL'onglet de recherche\n\n\nL'onglet \nSearch\n permet de parcourir l'ensemble des phrases du mod\u00e8le en utilisant un certain nombre de crit\u00e8res.\nLe plus utilis\u00e9 est la recherche texte simple pour lequel il est \u00e9galement possible d'utiliser des expressions r\u00e9guli\u00e8res.\n\n\n\n\nCela permet de consulter les phrases faisant partie de votre mod\u00e8le,\net vous donne la possibilit\u00e9 de faire \u00e9voluer les qualifications de ces phrases au cours du temps.\n\n\nLes diff\u00e9rents \u00e9tats d'une phrase\n\n\nChaque phrase \u00e0 un \u00e9tat (\"Status\") qui peut \u00e9voluer au cours du temps.\n\n\n\n\nInbox\n : La phrase n'a pas encore \u00e9t\u00e9 qualifi\u00e9e et ne fait pas partie du mod\u00e8le\n\n\nValidated\n : La phrase a \u00e9t\u00e9 valid\u00e9e mais n'est pas encore pris en compte dans les mod\u00e8les de NLP (cela peut prendre du temps dans le cas de mod\u00e8les de taille importante)\n\n\nIncluded in model\n : La phrase a \u00e9t\u00e9 valid\u00e9e et a \u00e9t\u00e9 prise en compte dans les mod\u00e8les de NLP\n\n\n\n\nCaract\u00e9ristiques avanc\u00e9es\n\n\nEn cliquant sur le menu \"Applications\", vous acc\u00e9dez \u00e0 la liste des applications disponibles.\n\n\n\n\nEn cliquant sur le bouton de modification, plusieurs options sont disponibles.\n\n\nS\u00e9lection du moteur NLP\n\n\nVous avez la possibilit\u00e9 de s\u00e9lectionner la librairie NLP utilis\u00e9e par cette application \u00e0 l'aide du bouton radio \"NLP engine\" :\n\n\nUtilisation des mod\u00e8les d'entit\u00e9s\n\n\n\n\nCette option permet de r\u00e9utiliser des mod\u00e8les d'entit\u00e9s pr\u00e9-construits dans vos nouvelles intentions. \nPar exemple, si vous cr\u00e9ez une intention avec une entit\u00e9 \nduckling:datetime\n, les dates seront automatiquement\nreconnues pour cette intention dans tous les nouvelles phrases attribu\u00e9es \u00e0 cette intention \n(En interne un arbitrage est effectu\u00e9 entre les informations provenant des mod\u00e8les d'entit\u00e9s pr\u00e9-construits et les informations tir\u00e9es de votre propre mod\u00e8le).\n\n\nCette option est activ\u00e9e par d\u00e9faut, il peut \u00eatre utile de la d\u00e9sactiver pour les mod\u00e8les de taille tr\u00e8s importante, pour lesquels\nla d\u00e9tection native sera sup\u00e9rieure dans quasiment tous les cas \u00e0 celle des mod\u00e8les d'entit\u00e9s. \n\n\nUtiliser les sous-entit\u00e9s\n\n\nSi vous activez cette option, vous allez \u00eatre en mesure de qualifier plusieurs niveaux d'entit\u00e9s :\n\n\n\n\nLe nombre de niveaux n'est pas limit\u00e9, mais il est conseill\u00e9 de ne pas en sp\u00e9cifier plus de 3 ou 4.", 
            "title": "Construire le mod\u00e8le"
        }, 
        {
            "location": "/construire-le-modele/#mise-en-place-dun-modele-nlp", 
            "text": "", 
            "title": "Mise en place d'un mod\u00e8le NLP"
        }, 
        {
            "location": "/construire-le-modele/#vue-densemble", 
            "text": "Sept onglets sont disponibles :   Try it  : permet d'ajouter ou de tester l'analyse de nouvelles phrases  Inbox  : l'ensemble des phrases non encore qualifi\u00e9es  Archive  : l'ensembles des phrases archiv\u00e9es, c'est \u00e0 dire volontairement non encore reconnue par le mod\u00e8le  Search  : une interface de recherche avanc\u00e9e qui permet de rechercher les phrases enregistr\u00e9es, qu'elles soient ou non qualifi\u00e9es    Intents  : la liste des intentions du mod\u00e8le  Entities  : la liste des entit\u00e9s du mod\u00e8le  Logs  : La liste des requ\u00eates interrogeant le mod\u00e8le    L'utilisateur est redirig\u00e9 par d\u00e9faut sur la cat\u00e9gorie  Inbox .", 
            "title": "Vue d'ensemble"
        }, 
        {
            "location": "/construire-le-modele/#ajouter-et-qualifier-des-phrases", 
            "text": "", 
            "title": "Ajouter et qualifier des phrases"
        }, 
        {
            "location": "/construire-le-modele/#pour-ajouter-une-phrase", 
            "text": "Cliquez sur le menu  Try It  puis indiquez votre phrase.\nIl faut lui attribuer une intention en s\u00e9lectionnant \"Create a New Intent\" dans le liste de s\u00e9lection \"Intent\".", 
            "title": "Pour ajouter une phrase"
        }, 
        {
            "location": "/construire-le-modele/#specifier-des-entites", 
            "text": "Si n\u00e9cessaire, vous pouvez ensuite sp\u00e9cifier les entit\u00e9s que vous souhaitez que votre mod\u00e8le reconnaisse pour cette intention,\nen s\u00e9lectionnant les portions de phrases correspondantes \u00e0 ces entit\u00e9s, puis en cliquant sur le bouton \"Add New Entity\" qui vient d'appara\u00eetre   A vous de choisir ensuite un type d'entit\u00e9 existant, ou d'en cr\u00e9er un nouveau, puis de donner un role \u00e0 cette entit\u00e9.", 
            "title": "Sp\u00e9cifier des entit\u00e9s"
        }, 
        {
            "location": "/construire-le-modele/#type-dentites-predefinies", 
            "text": "Dans cette fen\u00eatre de cr\u00e9ation d'entit\u00e9s, vous pouvez constater qu'il existe d\u00e9j\u00e0 un certain nombre d'entit\u00e9s (pr\u00e9fix\u00e9es par  duckling: ).\nIl s'agit d'entit\u00e9s reconnues par la librairie \u00e9ponyme. Elle seront automatiquement reconnues et valoris\u00e9es pour cette intention si vous les\nsp\u00e9cifiez dans au moins une phrase de cette intention.", 
            "title": "Type d'entit\u00e9s pr\u00e9d\u00e9finies"
        }, 
        {
            "location": "/construire-le-modele/#specifier-plusieurs-entites", 
            "text": "Il est bien s\u00fbr possible d'avoir plusieurs occurrences du m\u00eame role, ou d'un r\u00f4le diff\u00e9rent dans la m\u00eame phrase.", 
            "title": "Sp\u00e9cifier plusieurs entit\u00e9s"
        }, 
        {
            "location": "/construire-le-modele/#valider-la-phrase", 
            "text": "Terminez la qualification de la phrase en cliquant sur le bouton \"Validate\". \nAu bout de 2 phrases qualifi\u00e9es pour une intention donn\u00e9e, il est possible que le 3\u00e8me phrase ajout\u00e9e soit imm\u00e9diatement\nreconnue.   Si elle est qualifi\u00e9e correctement, vous n'avez plus qu'\u00e0 cliquer sur \"Validate\" pour confirmer que la phrase est correcte.\nSi ce n'est pas le cas, \u00e0 vous d'en corriger le sens avant de la valider.  Vous \u00eates en train de construire votre premier mod\u00e8le !", 
            "title": "Valider la phrase"
        }, 
        {
            "location": "/construire-le-modele/#recherche-de-phrases", 
            "text": "", 
            "title": "Recherche de phrases"
        }, 
        {
            "location": "/construire-le-modele/#longlet-de-recherche", 
            "text": "L'onglet  Search  permet de parcourir l'ensemble des phrases du mod\u00e8le en utilisant un certain nombre de crit\u00e8res.\nLe plus utilis\u00e9 est la recherche texte simple pour lequel il est \u00e9galement possible d'utiliser des expressions r\u00e9guli\u00e8res.   Cela permet de consulter les phrases faisant partie de votre mod\u00e8le,\net vous donne la possibilit\u00e9 de faire \u00e9voluer les qualifications de ces phrases au cours du temps.", 
            "title": "L'onglet de recherche"
        }, 
        {
            "location": "/construire-le-modele/#les-differents-etats-dune-phrase", 
            "text": "Chaque phrase \u00e0 un \u00e9tat (\"Status\") qui peut \u00e9voluer au cours du temps.   Inbox  : La phrase n'a pas encore \u00e9t\u00e9 qualifi\u00e9e et ne fait pas partie du mod\u00e8le  Validated  : La phrase a \u00e9t\u00e9 valid\u00e9e mais n'est pas encore pris en compte dans les mod\u00e8les de NLP (cela peut prendre du temps dans le cas de mod\u00e8les de taille importante)  Included in model  : La phrase a \u00e9t\u00e9 valid\u00e9e et a \u00e9t\u00e9 prise en compte dans les mod\u00e8les de NLP", 
            "title": "Les diff\u00e9rents \u00e9tats d'une phrase"
        }, 
        {
            "location": "/construire-le-modele/#caracteristiques-avancees", 
            "text": "En cliquant sur le menu \"Applications\", vous acc\u00e9dez \u00e0 la liste des applications disponibles.   En cliquant sur le bouton de modification, plusieurs options sont disponibles.", 
            "title": "Caract\u00e9ristiques avanc\u00e9es"
        }, 
        {
            "location": "/construire-le-modele/#selection-du-moteur-nlp", 
            "text": "Vous avez la possibilit\u00e9 de s\u00e9lectionner la librairie NLP utilis\u00e9e par cette application \u00e0 l'aide du bouton radio \"NLP engine\" :", 
            "title": "S\u00e9lection du moteur NLP"
        }, 
        {
            "location": "/construire-le-modele/#utilisation-des-modeles-dentites", 
            "text": "Cette option permet de r\u00e9utiliser des mod\u00e8les d'entit\u00e9s pr\u00e9-construits dans vos nouvelles intentions. \nPar exemple, si vous cr\u00e9ez une intention avec une entit\u00e9  duckling:datetime , les dates seront automatiquement\nreconnues pour cette intention dans tous les nouvelles phrases attribu\u00e9es \u00e0 cette intention \n(En interne un arbitrage est effectu\u00e9 entre les informations provenant des mod\u00e8les d'entit\u00e9s pr\u00e9-construits et les informations tir\u00e9es de votre propre mod\u00e8le).  Cette option est activ\u00e9e par d\u00e9faut, il peut \u00eatre utile de la d\u00e9sactiver pour les mod\u00e8les de taille tr\u00e8s importante, pour lesquels\nla d\u00e9tection native sera sup\u00e9rieure dans quasiment tous les cas \u00e0 celle des mod\u00e8les d'entit\u00e9s.", 
            "title": "Utilisation des mod\u00e8les d'entit\u00e9s"
        }, 
        {
            "location": "/construire-le-modele/#utiliser-les-sous-entites", 
            "text": "Si vous activez cette option, vous allez \u00eatre en mesure de qualifier plusieurs niveaux d'entit\u00e9s :   Le nombre de niveaux n'est pas limit\u00e9, mais il est conseill\u00e9 de ne pas en sp\u00e9cifier plus de 3 ou 4.", 
            "title": "Utiliser les sous-entit\u00e9s"
        }, 
        {
            "location": "/evaluer-la-pertinence-du-modele/", 
            "text": "Evaluer la pertinence du mod\u00e8le NLP\n\n\nDonn\u00e9es disponibles\n\n\nCinq onglets permettent de contr\u00f4ler la pertinence du mod\u00e8le :\n\n\n\n\nStats\n : statistiques minimales qui permettent de suivre la qualit\u00e9 du mod\u00e8le en production. Elles comprennent:\n\n\nl'auto-\u00e9valuation du mod\u00e8le sur sa pertinence en terme de reconnaissance d'intention et d'entit\u00e9s\n\n\nle nombre d'appels et le nombre d'erreurs\n\n\nle temps moyen d'ex\u00e9cution \n\n\n\n\n\n\nTest Trend\n : \u00e9volution de la pertinence des \ntests partiels de mod\u00e8le\n \n\n\nIntent Errors\n : la liste des erreurs d'intention (vraies ou fausses) trouv\u00e9es lors des tests partiels de mod\u00e8le\n\n\nEntity Errors\n : la liste des erreurs d'entit\u00e9 (vraies ou fausses) trouv\u00e9es lors des tests partiels de mod\u00e8le\n\n\nModel Builds\n : la liste des constructions des mod\u00e8les avec notamment le type de mod\u00e8le, le nombre de phrases et la dur\u00e9e de construction\n\n\n\n\nTests partiels de mod\u00e8le\n\n\nLes tests partiels de mod\u00e8le constituent un moyen classique de d\u00e9tecter les erreurs de qualification,\nou les probl\u00e8mes de proximit\u00e9 des intentions (ou entit\u00e9s) entre elles.\n\n\nIl s'agit de prendre une partie du mod\u00e8le actuelle au hasard (par exemple 90% des phrases du mod\u00e8le) afin de construire\nun mod\u00e8le l\u00e9g\u00e8rement moins pertinent, puis de tester les 10% restant avec ce nouveau mod\u00e8le.\n\n\nUne fois le principe pos\u00e9, il ne reste plus qu'\u00e0 r\u00e9p\u00e9ter le processus un certain nombre de fois\npour que les erreurs les plus fr\u00e9quentes soient pr\u00e9sent\u00e9es \u00e0 un correcteur manuel.\n\n\nCes tests partiels ne pr\u00e9sentent une utilit\u00e9 qu'avec des mod\u00e8les d\u00e9j\u00e0 cons\u00e9quents.\n\n\nLancement des tests\n\n\nPar d\u00e9faut les tests sont programm\u00e9s pour \u00eatre lanc\u00e9s de minuit \u00e0 5h du matin, toutes les 10 minutes.\nIl est possible de configurer ce comportement avec la propri\u00e9t\u00e9 \ntock_test_model_timeframe\n (=0,5 par d\u00e9faut)\n\n\nIntentions en erreur\n\n\nC'est l'objet de l'onglet \nIntent Errors\n. Voici par exemple une copie d'\u00e9cran pour le mod\u00e8le bot open-data.\n\n\n\n\nComme il s'agit d'un mod\u00e8le d'exemple, aucune \nvraie\n erreur n'a \u00e9t\u00e9 d\u00e9tect\u00e9e. \nOn peut tout de m\u00eame constater que dans certains cas le mod\u00e8le se trompe syst\u00e9matiquement avec une probabilit\u00e9 \u00e9lev\u00e9e.\n\n\nPour chaque phrase il est possible via la colonne \nActions\n de confirmer que le mod\u00e8le de base est correct (\nValidate Intent\n) \nou de corriger l'\u00e9ventuelle erreur d\u00e9tect\u00e9e (\nChange The Intent\n). \n\n\nEntit\u00e9s en erreur\n\n\nElles sont consultables de mani\u00e8re sym\u00e9trique via l'onglet \nEntity Errors\n.", 
            "title": "Evaluer la pertinence du mod\u00e8le"
        }, 
        {
            "location": "/evaluer-la-pertinence-du-modele/#evaluer-la-pertinence-du-modele-nlp", 
            "text": "", 
            "title": "Evaluer la pertinence du mod\u00e8le NLP"
        }, 
        {
            "location": "/evaluer-la-pertinence-du-modele/#donnees-disponibles", 
            "text": "Cinq onglets permettent de contr\u00f4ler la pertinence du mod\u00e8le :   Stats  : statistiques minimales qui permettent de suivre la qualit\u00e9 du mod\u00e8le en production. Elles comprennent:  l'auto-\u00e9valuation du mod\u00e8le sur sa pertinence en terme de reconnaissance d'intention et d'entit\u00e9s  le nombre d'appels et le nombre d'erreurs  le temps moyen d'ex\u00e9cution     Test Trend  : \u00e9volution de la pertinence des  tests partiels de mod\u00e8le    Intent Errors  : la liste des erreurs d'intention (vraies ou fausses) trouv\u00e9es lors des tests partiels de mod\u00e8le  Entity Errors  : la liste des erreurs d'entit\u00e9 (vraies ou fausses) trouv\u00e9es lors des tests partiels de mod\u00e8le  Model Builds  : la liste des constructions des mod\u00e8les avec notamment le type de mod\u00e8le, le nombre de phrases et la dur\u00e9e de construction", 
            "title": "Donn\u00e9es disponibles"
        }, 
        {
            "location": "/evaluer-la-pertinence-du-modele/#tests-partiels-de-modele", 
            "text": "Les tests partiels de mod\u00e8le constituent un moyen classique de d\u00e9tecter les erreurs de qualification,\nou les probl\u00e8mes de proximit\u00e9 des intentions (ou entit\u00e9s) entre elles.  Il s'agit de prendre une partie du mod\u00e8le actuelle au hasard (par exemple 90% des phrases du mod\u00e8le) afin de construire\nun mod\u00e8le l\u00e9g\u00e8rement moins pertinent, puis de tester les 10% restant avec ce nouveau mod\u00e8le.  Une fois le principe pos\u00e9, il ne reste plus qu'\u00e0 r\u00e9p\u00e9ter le processus un certain nombre de fois\npour que les erreurs les plus fr\u00e9quentes soient pr\u00e9sent\u00e9es \u00e0 un correcteur manuel.  Ces tests partiels ne pr\u00e9sentent une utilit\u00e9 qu'avec des mod\u00e8les d\u00e9j\u00e0 cons\u00e9quents.", 
            "title": "Tests partiels de mod\u00e8le"
        }, 
        {
            "location": "/evaluer-la-pertinence-du-modele/#lancement-des-tests", 
            "text": "Par d\u00e9faut les tests sont programm\u00e9s pour \u00eatre lanc\u00e9s de minuit \u00e0 5h du matin, toutes les 10 minutes.\nIl est possible de configurer ce comportement avec la propri\u00e9t\u00e9  tock_test_model_timeframe  (=0,5 par d\u00e9faut)", 
            "title": "Lancement des tests"
        }, 
        {
            "location": "/evaluer-la-pertinence-du-modele/#intentions-en-erreur", 
            "text": "C'est l'objet de l'onglet  Intent Errors . Voici par exemple une copie d'\u00e9cran pour le mod\u00e8le bot open-data.   Comme il s'agit d'un mod\u00e8le d'exemple, aucune  vraie  erreur n'a \u00e9t\u00e9 d\u00e9tect\u00e9e. \nOn peut tout de m\u00eame constater que dans certains cas le mod\u00e8le se trompe syst\u00e9matiquement avec une probabilit\u00e9 \u00e9lev\u00e9e.  Pour chaque phrase il est possible via la colonne  Actions  de confirmer que le mod\u00e8le de base est correct ( Validate Intent ) \nou de corriger l'\u00e9ventuelle erreur d\u00e9tect\u00e9e ( Change The Intent ).", 
            "title": "Intentions en erreur"
        }, 
        {
            "location": "/evaluer-la-pertinence-du-modele/#entites-en-erreur", 
            "text": "Elles sont consultables de mani\u00e8re sym\u00e9trique via l'onglet  Entity Errors .", 
            "title": "Entit\u00e9s en erreur"
        }, 
        {
            "location": "/api-nlp/", 
            "text": "Une API permettant d'analyser une nouvelle phrase \u00e0 partir d'un mod\u00e8le est disponible.\n\n\nVeuillez consulter sa documentation \nici\n.\n\n\nSi vous souhaitez la tester en condition r\u00e9elle, elle est consultable \u00e0 partir des \nimages docker\n\n\u00e0 l'adresse \nhttp://localhost/doc/index.html", 
            "title": "L'API NLP"
        }, 
        {
            "location": "/concevoir-un-bot/", 
            "text": "Introduction \u00e0 la boite \u00e0 outils conversationnelle\n\n\nConcevoir son premier bot\n\n\nUn bon point de d\u00e9part est de r\u00e9cup\u00e9rer le code source du \nbot Open Data\n \n\n\nSuivez les instructions pour d\u00e9marrer le bot dans l'IDE (ne configurez pas Messenger ou Google Assistant \u00e0 ce stade),\npuis connectez vous \u00e0 l'interface d'administration. Le bot est d'ors et d\u00e9j\u00e0 testable.\n\n\nL'onglet Test\n\n\nVia cet onglet, vous pouvez commencer \u00e0 tester le bot :\n\n\n\n\nL'interface est minimale car il s'agit d'un mode de test. \n\n\nL'objectif reste de faire dialoguer vos utilisateurs avec le bot via des canaux comme Messenger, Google Assistant...\nou vos sites ou applications.\n\n\nL'onglet Monitoring\n\n\nIl est ensuite possible de consulter la discussion que vous venez d'avoir avec le bot via l'onglet Monitoring\n\n\n\n\nIci, le canal est indiqu\u00e9 comme \u00e9tant celui de Messenger puisque il a \u00e9t\u00e9 simul\u00e9 une conversation Messenger.\n\n\nL'onglet Build\n\n\nAjouter une intention avec r\u00e9ponse sp\u00e9cifique\n\n\nVia la cat\u00e9gorie \nAdd new Answer\n, il est possible d'ajouter du comportement sp\u00e9cifique :\n\n\n\n\nPuis de tester ensuite la nouvelle intention et sa r\u00e9ponse :\n\n\n\n\nModification des r\u00e9ponses et internationalisation\n\n\nEnfin il est possible de modifier chaque r\u00e9ponse du bot par type d'interface (chat/voix), par type de connecteur et par langue\nvia l'onglet \ni18n\n.\n\n\nIl est aussi possible de rajouter des r\u00e9ponses alternatives ( \u00e0 chaque fois une r\u00e9ponse de la liste sera choisie au hasard) via cette interface.", 
            "title": "Concevoir un bot"
        }, 
        {
            "location": "/concevoir-un-bot/#introduction-a-la-boite-a-outils-conversationnelle", 
            "text": "", 
            "title": "Introduction \u00e0 la boite \u00e0 outils conversationnelle"
        }, 
        {
            "location": "/concevoir-un-bot/#concevoir-son-premier-bot", 
            "text": "Un bon point de d\u00e9part est de r\u00e9cup\u00e9rer le code source du  bot Open Data    Suivez les instructions pour d\u00e9marrer le bot dans l'IDE (ne configurez pas Messenger ou Google Assistant \u00e0 ce stade),\npuis connectez vous \u00e0 l'interface d'administration. Le bot est d'ors et d\u00e9j\u00e0 testable.", 
            "title": "Concevoir son premier bot"
        }, 
        {
            "location": "/concevoir-un-bot/#longlet-test", 
            "text": "Via cet onglet, vous pouvez commencer \u00e0 tester le bot :   L'interface est minimale car il s'agit d'un mode de test.   L'objectif reste de faire dialoguer vos utilisateurs avec le bot via des canaux comme Messenger, Google Assistant...\nou vos sites ou applications.", 
            "title": "L'onglet Test"
        }, 
        {
            "location": "/concevoir-un-bot/#longlet-monitoring", 
            "text": "Il est ensuite possible de consulter la discussion que vous venez d'avoir avec le bot via l'onglet Monitoring   Ici, le canal est indiqu\u00e9 comme \u00e9tant celui de Messenger puisque il a \u00e9t\u00e9 simul\u00e9 une conversation Messenger.", 
            "title": "L'onglet Monitoring"
        }, 
        {
            "location": "/concevoir-un-bot/#longlet-build", 
            "text": "", 
            "title": "L'onglet Build"
        }, 
        {
            "location": "/concevoir-un-bot/#ajouter-une-intention-avec-reponse-specifique", 
            "text": "Via la cat\u00e9gorie  Add new Answer , il est possible d'ajouter du comportement sp\u00e9cifique :   Puis de tester ensuite la nouvelle intention et sa r\u00e9ponse :", 
            "title": "Ajouter une intention avec r\u00e9ponse sp\u00e9cifique"
        }, 
        {
            "location": "/concevoir-un-bot/#modification-des-reponses-et-internationalisation", 
            "text": "Enfin il est possible de modifier chaque r\u00e9ponse du bot par type d'interface (chat/voix), par type de connecteur et par langue\nvia l'onglet  i18n .  Il est aussi possible de rajouter des r\u00e9ponses alternatives ( \u00e0 chaque fois une r\u00e9ponse de la liste sera choisie au hasard) via cette interface.", 
            "title": "Modification des r\u00e9ponses et internationalisation"
        }
    ]
}