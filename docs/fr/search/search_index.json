{
    "docs": [
        {
            "location": "/", 
            "text": "Bienvenue dans la documentation de Tock!\n\n\nPr\u00e9sentation\n\n\nTock\n (\nThe Open Conversation Kit\n) est une boite \u00e0 outils permettant de construire des agents conversationnels (ou bots). \n\n\nContrairement \u00e0 la plupart des autres solutions, il ne d\u00e9pend pas d\u2019API tierces (mais peut en int\u00e9grer ais\u00e9ment si n\u00e9cessaire)\u00a0: il est donc possible de conserver le contr\u00f4le complet de ses donn\u00e9es et de ses algorithmes.\n\n\nLe code source de l'ensemble se trouve sur github : \nhttps://github.com/voyages-sncf-technologies/tock\n sous la \nlicence Apache 2\n. \n\n\nDeux composants majeurs sont disponibles, le moteur NLP ( pour Natural Language Processing ou \nTALN\n en fran\u00e7ais),\n et un framework conversationnel qui int\u00e8gre les services NLP et diff\u00e9rents connecteurs comme Messenger, Google Assistant ou Slack. \n\n\nLa composante NLP est ind\u00e9pendante de la partie conversationnelle. \nIl est donc possible d'utiliser le NLP sans devoir ma\u00eetriser la complexit\u00e9 induite par la gestion des conversations.\nDans certain cas d'usage importants, comme l'\nInternet des objets\n, \nl'utilisation d'un mod\u00e8le NLP seule est pertinente.\n\n\n\n\nUne plateforme pour construire des mod\u00e8les d'analyse du language naturel\n\n\nInterface d'administration\n\n\nL'outil principal est constitu\u00e9 par une interface d'administration qui permet de qualifier des \nphrases afin de construire des mod\u00e8les de traitement automatique du langage naturel ( \nTALN\n ) :\n\n\n\n\nSuivi de qualit\u00e9 des mod\u00e8les\n\n\nCette interface fournit \u00e9galement les outils pour faire \u00e9voluer les mod\u00e8les et permet de monitorer leurs pertinences :\n\n\n\n\nStanford CoreNLP\n ou \nApache OpenNLP\n\n\nLa construction automatique des mod\u00e8les est bas\u00e9e sur une de ces solutions open-sources (au choix). \nTock fournit un niveau d'indirection qui permet d'int\u00e9grer d'autres librairies NLP. \nL'int\u00e9gration de \nSparkNLP\n est d'ailleurs en cours d'\u00e9tude.\n\n\nDuckling\n\n\nUn outil de parsing de dates et de types simples bas\u00e9 sur la librairie open-source \nDuckling\n \nest \u00e9galement int\u00e9gr\u00e9 par d\u00e9faut.\n\n\nAPI NLP\n\n\nLes mod\u00e8les peuvent \u00eatre utilis\u00e9s via l'\nAPI\n mis \u00e0 disposition.\n\n\nUn framework conversationnel\n\n\nCe framework est la deuxi\u00e8me brique qui permet de construire des assistants.\n\n\nElle utilise la brique de TALN de Tock via son \nAPI\n.\n\n\nGestion du contexte et de l'historique\n\n\nLa gestion des contextes des dialogues et de l\u2019historique des conversations est automatiquement disponible. \nDes notions avanc\u00e9es comme la fusion d'entit\u00e9s sont \u00e9galement mis \u00e0 disposition.\n(par exemple le fait de pr\u00e9ciser la date \"demain\" puis plus tard \"plut\u00f4t le soir\" met automatiquement la valeur de la date \u00e0 jour)\n\n\nConnecteurs tiers\n\n\nDes connecteurs \u00e0 Facebook Messenger, Google Assistant et Slack sont disponibles. \nIl est possible d'en cr\u00e9er facilement d'autres, que ce soit pour se connecter \u00e0 d'autres canaux ou pour r\u00e9pondre \u00e0 des besoins sp\u00e9cifiques.\n\n\nSuivi des conversations\n\n\nEnfin une interface d'administration est mise \u00e0 disposition et permet de tester les bots et de suivre les conversations des utilisateurs. \n\n\nGen\u00e8se du projet\n\n\nLe projet a \u00e9t\u00e9 initi\u00e9 en 2016 par l'\u00e9quipe Innovation de \nOui.sncf\n \ndans un premier temps afin de motoriser l'analyse des commandes vocales sur ses \napplications mobiles\n.\n\n\nL'outil a ensuite \u00e9t\u00e9 utilis\u00e9 pour impl\u00e9menter son \nBot Messenger\n.\n\n\nDepuis, une \n\u00e9quipe d\u00e9di\u00e9e\n au sein de OUI.sncf fait \u00e9voluer et maintient la solution.\n\n\nL'\nassistant Google OUI.sncf\n est \u00e9galement bas\u00e9 sur Tock,\nde m\u00eame que le \nOUIbot\n.\n\n\nLes outils ont \u00e9t\u00e9 open-sourc\u00e9 dans le but de mutualiser l'effort avec d'autres \u00e9quipes\n qui souhaiterait d\u00e9velopper des assistants ou bots. \n\n\nTechnologies\n\n\nLa plateforme applicative se base sur la \nJVM\n.\n\n\nLe langage de r\u00e9f\u00e9rence est \nKotlin\n.\n\n\nLe reste de la panoplie applicative est constitu\u00e9e de \nVert.x\n et \nMongoDB\n, m\u00eame si pour l\u2019instant les applications sont essentiellement d\u00e9velopp\u00e9s en \u00ab blocking IO \u00bb. En cible, l\u2019approche \u00ab\u00a0fibers\u00a0\u00bb ( cf \nhttp://docs.paralleluniverse.co/quasar/\n) sera privil\u00e9gi\u00e9e.\n\n\nLes interfaces d'administration sont impl\u00e9ment\u00e9es en \nAngular4\n/\nTypescript\n.\n\n\nCependant il est tout \u00e0 fait possible de d\u00e9velopper des applications en utilisant d'autres languages de programmation via les APIs mis \u00e0 disposition.\n\n\nLes diff\u00e9rents projets open-sourc\u00e9s\n\n\n\n\n\n\nLe projet principal se trouve sous licence \nApache OpenNLP\n. Le code source est disponible sur GitHub : \nhttps://github.com/voyages-sncf-technologies/tock\n\n\n\n\n\n\nCependant une d\u00e9pendance optionnelle,  \nStanford CoreNLP\n, est sous licence \nGPL\n. \n Le code utilisant cette d\u00e9pendance se trouve donc dans un projet \u00e0 part, sous licence GPL : \nhttps://github.com/voyages-sncf-technologies/tock-corenlp\n\n\n\n\n\n\nEnfin deux autres projets sont mis \u00e0 disposition : \n\n\n\n\nUn projet contenant des images dockers avec comme objectif de faciliter la prise en main : \nhttps://github.com/voyages-sncf-technologies/tock-docker\n\n\nUn projet contenant un exemple d'impl\u00e9mentation de bot se basant sur les \nAPI SNCF\n en Open Data : \nhttps://github.com/voyages-sncf-technologies/tock-bot-open-data", 
            "title": "Pr\u00e9sentation"
        }, 
        {
            "location": "/#bienvenue-dans-la-documentation-de-tock", 
            "text": "", 
            "title": "Bienvenue dans la documentation de Tock!"
        }, 
        {
            "location": "/#presentation", 
            "text": "Tock  ( The Open Conversation Kit ) est une boite \u00e0 outils permettant de construire des agents conversationnels (ou bots).   Contrairement \u00e0 la plupart des autres solutions, il ne d\u00e9pend pas d\u2019API tierces (mais peut en int\u00e9grer ais\u00e9ment si n\u00e9cessaire)\u00a0: il est donc possible de conserver le contr\u00f4le complet de ses donn\u00e9es et de ses algorithmes.  Le code source de l'ensemble se trouve sur github :  https://github.com/voyages-sncf-technologies/tock  sous la  licence Apache 2 .   Deux composants majeurs sont disponibles, le moteur NLP ( pour Natural Language Processing ou  TALN  en fran\u00e7ais),\n et un framework conversationnel qui int\u00e8gre les services NLP et diff\u00e9rents connecteurs comme Messenger, Google Assistant ou Slack.   La composante NLP est ind\u00e9pendante de la partie conversationnelle. \nIl est donc possible d'utiliser le NLP sans devoir ma\u00eetriser la complexit\u00e9 induite par la gestion des conversations.\nDans certain cas d'usage importants, comme l' Internet des objets , \nl'utilisation d'un mod\u00e8le NLP seule est pertinente.", 
            "title": "Pr\u00e9sentation"
        }, 
        {
            "location": "/#une-plateforme-pour-construire-des-modeles-danalyse-du-language-naturel", 
            "text": "", 
            "title": "Une plateforme pour construire des mod\u00e8les d'analyse du language naturel"
        }, 
        {
            "location": "/#interface-dadministration", 
            "text": "L'outil principal est constitu\u00e9 par une interface d'administration qui permet de qualifier des \nphrases afin de construire des mod\u00e8les de traitement automatique du langage naturel (  TALN  ) :", 
            "title": "Interface d'administration"
        }, 
        {
            "location": "/#suivi-de-qualite-des-modeles", 
            "text": "Cette interface fournit \u00e9galement les outils pour faire \u00e9voluer les mod\u00e8les et permet de monitorer leurs pertinences :", 
            "title": "Suivi de qualit\u00e9 des mod\u00e8les"
        }, 
        {
            "location": "/#stanford-corenlp-ou-apache-opennlp", 
            "text": "La construction automatique des mod\u00e8les est bas\u00e9e sur une de ces solutions open-sources (au choix). \nTock fournit un niveau d'indirection qui permet d'int\u00e9grer d'autres librairies NLP. \nL'int\u00e9gration de  SparkNLP  est d'ailleurs en cours d'\u00e9tude.", 
            "title": "Stanford CoreNLP ou Apache OpenNLP"
        }, 
        {
            "location": "/#duckling", 
            "text": "Un outil de parsing de dates et de types simples bas\u00e9 sur la librairie open-source  Duckling  \nest \u00e9galement int\u00e9gr\u00e9 par d\u00e9faut.", 
            "title": "Duckling"
        }, 
        {
            "location": "/#api-nlp", 
            "text": "Les mod\u00e8les peuvent \u00eatre utilis\u00e9s via l' API  mis \u00e0 disposition.", 
            "title": "API NLP"
        }, 
        {
            "location": "/#un-framework-conversationnel", 
            "text": "Ce framework est la deuxi\u00e8me brique qui permet de construire des assistants.  Elle utilise la brique de TALN de Tock via son  API .", 
            "title": "Un framework conversationnel"
        }, 
        {
            "location": "/#gestion-du-contexte-et-de-lhistorique", 
            "text": "La gestion des contextes des dialogues et de l\u2019historique des conversations est automatiquement disponible. \nDes notions avanc\u00e9es comme la fusion d'entit\u00e9s sont \u00e9galement mis \u00e0 disposition.\n(par exemple le fait de pr\u00e9ciser la date \"demain\" puis plus tard \"plut\u00f4t le soir\" met automatiquement la valeur de la date \u00e0 jour)", 
            "title": "Gestion du contexte et de l'historique"
        }, 
        {
            "location": "/#connecteurs-tiers", 
            "text": "Des connecteurs \u00e0 Facebook Messenger, Google Assistant et Slack sont disponibles. \nIl est possible d'en cr\u00e9er facilement d'autres, que ce soit pour se connecter \u00e0 d'autres canaux ou pour r\u00e9pondre \u00e0 des besoins sp\u00e9cifiques.", 
            "title": "Connecteurs tiers"
        }, 
        {
            "location": "/#suivi-des-conversations", 
            "text": "Enfin une interface d'administration est mise \u00e0 disposition et permet de tester les bots et de suivre les conversations des utilisateurs.", 
            "title": "Suivi des conversations"
        }, 
        {
            "location": "/#genese-du-projet", 
            "text": "Le projet a \u00e9t\u00e9 initi\u00e9 en 2016 par l'\u00e9quipe Innovation de  Oui.sncf  \ndans un premier temps afin de motoriser l'analyse des commandes vocales sur ses  applications mobiles .  L'outil a ensuite \u00e9t\u00e9 utilis\u00e9 pour impl\u00e9menter son  Bot Messenger .  Depuis, une  \u00e9quipe d\u00e9di\u00e9e  au sein de OUI.sncf fait \u00e9voluer et maintient la solution.  L' assistant Google OUI.sncf  est \u00e9galement bas\u00e9 sur Tock,\nde m\u00eame que le  OUIbot .  Les outils ont \u00e9t\u00e9 open-sourc\u00e9 dans le but de mutualiser l'effort avec d'autres \u00e9quipes\n qui souhaiterait d\u00e9velopper des assistants ou bots.", 
            "title": "Gen\u00e8se du projet"
        }, 
        {
            "location": "/#technologies", 
            "text": "La plateforme applicative se base sur la  JVM .  Le langage de r\u00e9f\u00e9rence est  Kotlin .  Le reste de la panoplie applicative est constitu\u00e9e de  Vert.x  et  MongoDB , m\u00eame si pour l\u2019instant les applications sont essentiellement d\u00e9velopp\u00e9s en \u00ab blocking IO \u00bb. En cible, l\u2019approche \u00ab\u00a0fibers\u00a0\u00bb ( cf  http://docs.paralleluniverse.co/quasar/ ) sera privil\u00e9gi\u00e9e.  Les interfaces d'administration sont impl\u00e9ment\u00e9es en  Angular4 / Typescript .  Cependant il est tout \u00e0 fait possible de d\u00e9velopper des applications en utilisant d'autres languages de programmation via les APIs mis \u00e0 disposition.", 
            "title": "Technologies"
        }, 
        {
            "location": "/#les-differents-projets-open-sources", 
            "text": "Le projet principal se trouve sous licence  Apache OpenNLP . Le code source est disponible sur GitHub :  https://github.com/voyages-sncf-technologies/tock    Cependant une d\u00e9pendance optionnelle,   Stanford CoreNLP , est sous licence  GPL . \n Le code utilisant cette d\u00e9pendance se trouve donc dans un projet \u00e0 part, sous licence GPL :  https://github.com/voyages-sncf-technologies/tock-corenlp    Enfin deux autres projets sont mis \u00e0 disposition :    Un projet contenant des images dockers avec comme objectif de faciliter la prise en main :  https://github.com/voyages-sncf-technologies/tock-docker  Un projet contenant un exemple d'impl\u00e9mentation de bot se basant sur les  API SNCF  en Open Data :  https://github.com/voyages-sncf-technologies/tock-bot-open-data", 
            "title": "Les diff\u00e9rents projets open-sourc\u00e9s"
        }, 
        {
            "location": "/pour-commencer/", 
            "text": "Commencer \u00e0 utiliser Tock\n\n\nUn exemple de bot\n\n\nUn bot d'exemple utilisant Tock est mis \u00e0 disposition\u00a0sur github : \nhttps://github.com/voyages-sncf-technologies/tock-bot-open-data\n.\n\n\nIl se base sur les \nAPI Open Data de la SNCF\n, et pr\u00e9sente des fonctionnalit\u00e9s minimales permettant de d\u00e9montrer l\u2019usage de Tock. \n\n\nIl s'agit d'un bon point de d\u00e9part, puisque il comporte \u00e9galement un mod\u00e8le NLP tr\u00e8s simple.\nBien entendu, comme le mod\u00e8le n'est pas complet, la qualit\u00e9 du bot est faible, mais suffit cependant \u00e0 d\u00e9montrer le principe de l'outil.\n\n\nDans la suite de la documentation, nous nous r\u00e9f\u00e9rerons \u00e0 cet exemple pour couvrir l'ensemble des fonctionnalit\u00e9s. \n\n\nImages Docker\n\n\nDes images docker sont mises \u00e0 disposition pour faciliter le d\u00e9marrage.\n\n\nCes images sont disponibles dans le \nHub Docker\n.\n\n\nLe code source utilis\u00e9 pour construire ces images, ainsi que les fichiers \ndocker-compose\n \nutilis\u00e9s pour d\u00e9marrer l'ensemble de la boite \u00e0 outils \nTock\n sont disponibles dans le repository github \nhttps://github.com/voyages-sncf-technologies/tock-docker\n.\n\n\nD\u00e9marrer l'interface d'administration\n\n\n    \n#get the last docker-compose file\n\n    curl -o docker-compose.yml https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/docker-compose.yml\n    \n#get the last tag\n\n    curl -o .env https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/.env\n    \n#launch the stack\n\n    docker-compose up\n\n\n\n\n\nL'interface d'administration NLP est maintenant disponible sur le port 80 : \nhttp://localhost\n\n\nl'identifiant par d\u00e9faut est \nadmin@app.com\n et le mot de passe \npassword\n.\n\n\nBot d'exemple bas\u00e9 sur les API Open Data\n\n\nUne image docker est mis \u00e0 disposition pour le lancer directement.\nLes instructions pour la d\u00e9marrer sont pr\u00e9cis\u00e9es dans le \nprojet github contenant les images docker\n.\n\n\nMenu de l'interface d'administration\n\n\nLe menu \u00e0 gauche permet d'acc\u00e9der aux diff\u00e9rentes fonctionnalit\u00e9s.\nLa cat\u00e9gorie \"NLP\" permet de construire et manipuler le mod\u00e8le.", 
            "title": "Pour commencer"
        }, 
        {
            "location": "/pour-commencer/#commencer-a-utiliser-tock", 
            "text": "", 
            "title": "Commencer \u00e0 utiliser Tock"
        }, 
        {
            "location": "/pour-commencer/#un-exemple-de-bot", 
            "text": "Un bot d'exemple utilisant Tock est mis \u00e0 disposition\u00a0sur github :  https://github.com/voyages-sncf-technologies/tock-bot-open-data .  Il se base sur les  API Open Data de la SNCF , et pr\u00e9sente des fonctionnalit\u00e9s minimales permettant de d\u00e9montrer l\u2019usage de Tock.   Il s'agit d'un bon point de d\u00e9part, puisque il comporte \u00e9galement un mod\u00e8le NLP tr\u00e8s simple.\nBien entendu, comme le mod\u00e8le n'est pas complet, la qualit\u00e9 du bot est faible, mais suffit cependant \u00e0 d\u00e9montrer le principe de l'outil.  Dans la suite de la documentation, nous nous r\u00e9f\u00e9rerons \u00e0 cet exemple pour couvrir l'ensemble des fonctionnalit\u00e9s.", 
            "title": "Un exemple de bot"
        }, 
        {
            "location": "/pour-commencer/#images-docker", 
            "text": "Des images docker sont mises \u00e0 disposition pour faciliter le d\u00e9marrage.  Ces images sont disponibles dans le  Hub Docker .  Le code source utilis\u00e9 pour construire ces images, ainsi que les fichiers  docker-compose  \nutilis\u00e9s pour d\u00e9marrer l'ensemble de la boite \u00e0 outils  Tock  sont disponibles dans le repository github  https://github.com/voyages-sncf-technologies/tock-docker .", 
            "title": "Images Docker"
        }, 
        {
            "location": "/pour-commencer/#demarrer-linterface-dadministration", 
            "text": "#get the last docker-compose file \n    curl -o docker-compose.yml https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/docker-compose.yml\n     #get the last tag \n    curl -o .env https://raw.githubusercontent.com/voyages-sncf-technologies/tock-docker/master/.env\n     #launch the stack \n    docker-compose up  L'interface d'administration NLP est maintenant disponible sur le port 80 :  http://localhost  l'identifiant par d\u00e9faut est  admin@app.com  et le mot de passe  password .", 
            "title": "D\u00e9marrer l'interface d'administration"
        }, 
        {
            "location": "/pour-commencer/#bot-dexemple-base-sur-les-api-open-data", 
            "text": "Une image docker est mis \u00e0 disposition pour le lancer directement.\nLes instructions pour la d\u00e9marrer sont pr\u00e9cis\u00e9es dans le  projet github contenant les images docker .", 
            "title": "Bot d'exemple bas\u00e9 sur les API Open Data"
        }, 
        {
            "location": "/pour-commencer/#menu-de-linterface-dadministration", 
            "text": "Le menu \u00e0 gauche permet d'acc\u00e9der aux diff\u00e9rentes fonctionnalit\u00e9s.\nLa cat\u00e9gorie \"NLP\" permet de construire et manipuler le mod\u00e8le.", 
            "title": "Menu de l'interface d'administration"
        }, 
        {
            "location": "/construire-le-modele/", 
            "text": "Mise en place d'un mod\u00e8le NLP\n\n\nAjouter et qualifier des phrases\n\n\nSept cat\u00e9gories sont disponibles :\n\n\n\n\nTry it\n : permet d'ajouter ou de tester l'analyse de nouvelles phrases\n\n\nInbox\n : l'ensemble des phrases non encore qualifi\u00e9es\n\n\nArchive\n : l'ensembles des phrases archiv\u00e9es, c'est \u00e0 dire volontairement non encore reconnue par le mod\u00e8le\n\n\nSearch\n : une interface de recherche avanc\u00e9e qui permet de rechercher les phrases enregistr\u00e9es, qu'elles soient ou non qualifi\u00e9es  \n\n\nIntents\n : la liste des intentions du mod\u00e8le\n\n\nEntities\n : la liste des entit\u00e9s du mod\u00e8le\n\n\nLogs\n : La liste des requ\u00eates interrogeant le mod\u00e8le \n\n\n\n\nL'utilisateur est redirig\u00e9 par d\u00e9faut sur la cat\u00e9gorie \nInbox\n.", 
            "title": "Construire le mod\u00e8le"
        }, 
        {
            "location": "/construire-le-modele/#mise-en-place-dun-modele-nlp", 
            "text": "", 
            "title": "Mise en place d'un mod\u00e8le NLP"
        }, 
        {
            "location": "/construire-le-modele/#ajouter-et-qualifier-des-phrases", 
            "text": "Sept cat\u00e9gories sont disponibles :   Try it  : permet d'ajouter ou de tester l'analyse de nouvelles phrases  Inbox  : l'ensemble des phrases non encore qualifi\u00e9es  Archive  : l'ensembles des phrases archiv\u00e9es, c'est \u00e0 dire volontairement non encore reconnue par le mod\u00e8le  Search  : une interface de recherche avanc\u00e9e qui permet de rechercher les phrases enregistr\u00e9es, qu'elles soient ou non qualifi\u00e9es    Intents  : la liste des intentions du mod\u00e8le  Entities  : la liste des entit\u00e9s du mod\u00e8le  Logs  : La liste des requ\u00eates interrogeant le mod\u00e8le    L'utilisateur est redirig\u00e9 par d\u00e9faut sur la cat\u00e9gorie  Inbox .", 
            "title": "Ajouter et qualifier des phrases"
        }, 
        {
            "location": "/api-nlp/", 
            "text": "Veuillez consulter sa documentation \nici\n.", 
            "title": "L'API NLP"
        }
    ]
}